name: "Terraform apply autro-approve"
description: "Setup Terraform and apply the changes"
inputs:
  terraform_directory:
    description: "Directory that holds Terraform code"
    required: true
  terraform_version:
    description: "Terraform Version"
    required: true
  github_token:
    description: "GitHub token for commenting"
    required: true
  minio_endpoint:
    description: "Endpoint URL for the MinIO S3-compatible storage, used in the Terraform backend configuration."
    required: true
  minio_access_key:
    description: "Access key for the MinIO storage, used in the Terraform backend configuration."
    required: true
  minio_secret_key:
    description: "Secret key for the MinIO storage, used in the Terraform backend configuration."
    required: true
  terraform_secrets:
    description: "terraform.tfvars for quick prototyping"
    required: true
  terraform_ssh_key:
    description: "private key for ssh connection to the instance"
    required: true
  deploy_environment:
    description: "The Deploy environment to distinguish workflows and envs"
runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false
    - name: Replace placeholders in backend.tf
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        sed -i 's|MINIO_ENDPOINT_PLACEHOLDER|${{ inputs.minio_endpoint }}|g' backend.tf
        sed -i 's|MINIO_ACCESS_KEY_PLACEHOLDER|${{ inputs.minio_access_key }}|g' backend.tf
        sed -i 's|MINIO_SECRET_KEY_PLACEHOLDER|${{ inputs.minio_secret_key }}|g' backend.tf
    - name: "create terraform.tfvars"
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        echo ${{ inputs.terraform_secrets }} | base64 -d > terraform.tfvars
    - name: "create terraform ssh key"
      shell: bash
      run: |
        mkdir -p ~/.ssh
        echo ${{ inputs.terraform_ssh_key }} | base64 -d > ~/.ssh/terraform
        chmod 600 ~/.ssh/terraform
    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform init
    - name: Terraform Apply
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform apply --auto-approve
